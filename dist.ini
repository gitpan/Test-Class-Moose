name             = Test-Class-Moose
author           = Curtis "Ovid" Poe <ovid@cpan.org>
license          = Perl_5
copyright_holder = Curtis "Ovid" Poe
copyright_year   = 2014
version          = 0.58

; basic functionality of dzil
[@Basic]

; don't load the damned .bak files
; [GatherDir]
; exclude_match = \.bak$

[NextRelease]
format = %-4v %{yyyy-MM-dd}d

[Authority]
authority = cpan:OVID
do_munging = 0

; gather prereqs for the Makefile.PL
[AutoPrereqs]
skip = Person
skip = ^TestsFor

; authordep Pod::Weaver::Section::Contributors
[ContributorsFromGit]
[Meta::Contributors]

; create a META.json file
[MetaJSON]

; use github's issue tracker and always keep the user Ovid, no matter who
; releases
[GithubMeta]
issues   = 1
user     = Ovid
homepage = http://test-class-moose.github.io/test-class-moose/

; Write a lot of POD for me
[PodWeaver]

; Run useful tests to make sure our dist isn't a mess
[PodSyntaxTests]
[Test::PodSpelling]
stopwords = API
stopwords = AnnoCPAN
stopwords = Beresford
stopwords = CPAN
stopwords = Corneliu
stopwords = DEPRECATIONS
stopwords = Extensibility
stopwords = OO
stopwords = Oji
stopwords = Oschwald
stopwords = Otsuka
stopwords = Petrea
stopwords = Refactor
stopwords = Rolsky
stopwords = STDOUT
stopwords = Stuckdownawell
stopwords = TCM
stopwords = TODO
stopwords = Udo
stopwords = arisdottle
stopwords = distro
stopwords = hardcode
stopwords = hashrefs
stopwords = invocant
stopwords = metadata
stopwords = munge
stopwords = munges
stopwords = namespace
stopwords = ok
stopwords = online
stopwords = parallelizable
stopwords = parallelize
stopwords = parallelized
stopwords = parameterized
stopwords = prereq
stopwords = rebless
stopwords = runtime
stopwords = startup
stopwords = strawman
stopwords = subtest
stopwords = subtests
stopwords = teardown
stopwords = xUnit

; Can't release without an updated Changelog
[CheckChangeLog]

; Add the version to the files
[PkgVersion]

; We need Perl 5.010 or better
[Prereqs]
perl = 5.010

; We would like the user to install these, but they're not strictly necessary
[Prereqs / RuntimeRecommends]
Parallel::ForkManager = 0.7.6

[Prereqs / TestRecommends]
Test::Output = 0.0005

; Create a README in markdown format for Github
[ ReadmeAnyFromPod / MarkdownInRoot ]
filename = README.md

; Many git features, including tagging releases
[@Git]
allow_dirty = Makefile.PL
allow_dirty = README.md
allow_dirty = Changes

; If we have an old Makefile.PL, don't use it
[Run::BeforeBuild]
run = test -f Makefile.PL && rm Makefile.PL || echo Makefile.PL already removed

; Copy the new Makefile.PL into this directory and commit it if it's changed
[Run::AfterRelease]
run = cp %d/Makefile.PL ./
run = git status --porcelain | grep 'M Makefile.PL' && git commit -m 'auto-committed Makefile.PL by dist.ini' Makefile.PL || echo Makefile.PL up to date
run = git status --porcelain | grep 'M README.md'   && git commit -m 'auto-committed README.md by dist.ini' README.md   || echo README.md up to date
